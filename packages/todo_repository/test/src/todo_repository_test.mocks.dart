// Mocks generated by Mockito 5.4.2 from annotations
// in todo_repository/test/src/todo_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:connectivity_plus/connectivity_plus.dart' as _i5;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:todo_api/todo_api.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoApi extends _i1.Mock implements _i2.TodoApi {
  @override
  _i3.Future<(List<_i2.Todo>, int)> getTodoList() => (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [],
        ),
        returnValue: _i3.Future<(List<_i2.Todo>, int)>.value((<_i2.Todo>[], 0)),
        returnValueForMissingStub:
            _i3.Future<(List<_i2.Todo>, int)>.value((<_i2.Todo>[], 0)),
      ) as _i3.Future<(List<_i2.Todo>, int)>);
  @override
  _i3.Future<(_i2.Todo, int)> getTodo(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [id],
        ),
        returnValue: _i3.Future<(_i2.Todo, int)>.value((
          _i4.dummyValue<_i2.Todo>(
            this,
            Invocation.method(
              #getTodo,
              [id],
            ),
          ),
          0
        )),
        returnValueForMissingStub: _i3.Future<(_i2.Todo, int)>.value((
          _i4.dummyValue<_i2.Todo>(
            this,
            Invocation.method(
              #getTodo,
              [id],
            ),
          ),
          0
        )),
      ) as _i3.Future<(_i2.Todo, int)>);
  @override
  _i3.Future<int> saveTodo(
    _i2.Todo? todo,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTodo,
          [
            todo,
            revision,
          ],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<(_i2.Todo, int)> deleteTodo(
    String? id,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [
            id,
            revision,
          ],
        ),
        returnValue: _i3.Future<(_i2.Todo, int)>.value((
          _i4.dummyValue<_i2.Todo>(
            this,
            Invocation.method(
              #deleteTodo,
              [
                id,
                revision,
              ],
            ),
          ),
          0
        )),
        returnValueForMissingStub: _i3.Future<(_i2.Todo, int)>.value((
          _i4.dummyValue<_i2.Todo>(
            this,
            Invocation.method(
              #deleteTodo,
              [
                id,
                revision,
              ],
            ),
          ),
          0
        )),
      ) as _i3.Future<(_i2.Todo, int)>);
  @override
  _i3.Future<(List<_i2.Todo>, int)> patchList(
    List<_i2.Todo>? list,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchList,
          [
            list,
            revision,
          ],
        ),
        returnValue: _i3.Future<(List<_i2.Todo>, int)>.value((<_i2.Todo>[], 0)),
        returnValueForMissingStub:
            _i3.Future<(List<_i2.Todo>, int)>.value((<_i2.Todo>[], 0)),
      ) as _i3.Future<(List<_i2.Todo>, int)>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i5.Connectivity {
  @override
  _i3.Stream<_i6.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i3.Stream<_i6.ConnectivityResult>.empty(),
        returnValueForMissingStub: _i3.Stream<_i6.ConnectivityResult>.empty(),
      ) as _i3.Stream<_i6.ConnectivityResult>);
  @override
  _i3.Future<_i6.ConnectivityResult> checkConnectivity() => (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i3.Future<_i6.ConnectivityResult>.value(
            _i6.ConnectivityResult.bluetooth),
        returnValueForMissingStub: _i3.Future<_i6.ConnectivityResult>.value(
            _i6.ConnectivityResult.bluetooth),
      ) as _i3.Future<_i6.ConnectivityResult>);
}
