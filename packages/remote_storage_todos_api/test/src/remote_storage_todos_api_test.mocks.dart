// Mocks generated by Mockito 5.4.2 from annotations
// in remote_storage_todos_api/test/src/remote_storage_todos_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:remote_storage_todos_api/src/clients/backend_client.dart'
    as _i2;
import 'package:todo_api/todo_api.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BackendClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackendClient extends _i1.Mock implements _i2.BackendClient {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.Future<(List<_i4.Todo>, int)> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<(List<_i4.Todo>, int)>.value((<_i4.Todo>[], 0)),
        returnValueForMissingStub:
            _i3.Future<(List<_i4.Todo>, int)>.value((<_i4.Todo>[], 0)),
      ) as _i3.Future<(List<_i4.Todo>, int)>);
  @override
  _i3.Future<(List<_i4.Todo>, int)> updateAll(
    List<_i4.Todo>? list,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [
            list,
            revision,
          ],
        ),
        returnValue: _i3.Future<(List<_i4.Todo>, int)>.value((<_i4.Todo>[], 0)),
        returnValueForMissingStub:
            _i3.Future<(List<_i4.Todo>, int)>.value((<_i4.Todo>[], 0)),
      ) as _i3.Future<(List<_i4.Todo>, int)>);
  @override
  _i3.Future<(_i4.Todo, int)> getTodo(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [id],
        ),
        returnValue: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #getTodo,
              [id],
            ),
          ),
          0
        )),
        returnValueForMissingStub: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #getTodo,
              [id],
            ),
          ),
          0
        )),
      ) as _i3.Future<(_i4.Todo, int)>);
  @override
  _i3.Future<(_i4.Todo, int)> insert(
    _i4.Todo? todo,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            todo,
            revision,
          ],
        ),
        returnValue: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #insert,
              [
                todo,
                revision,
              ],
            ),
          ),
          0
        )),
        returnValueForMissingStub: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #insert,
              [
                todo,
                revision,
              ],
            ),
          ),
          0
        )),
      ) as _i3.Future<(_i4.Todo, int)>);
  @override
  _i3.Future<(_i4.Todo, int)> updateTodo(
    _i4.Todo? todo,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [
            todo,
            revision,
          ],
        ),
        returnValue: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #updateTodo,
              [
                todo,
                revision,
              ],
            ),
          ),
          0
        )),
        returnValueForMissingStub: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #updateTodo,
              [
                todo,
                revision,
              ],
            ),
          ),
          0
        )),
      ) as _i3.Future<(_i4.Todo, int)>);
  @override
  _i3.Future<(_i4.Todo, int)> deleteTodo(
    String? id,
    int? revision,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [
            id,
            revision,
          ],
        ),
        returnValue: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #deleteTodo,
              [
                id,
                revision,
              ],
            ),
          ),
          0
        )),
        returnValueForMissingStub: _i3.Future<(_i4.Todo, int)>.value((
          _i5.dummyValue<_i4.Todo>(
            this,
            Invocation.method(
              #deleteTodo,
              [
                id,
                revision,
              ],
            ),
          ),
          0
        )),
      ) as _i3.Future<(_i4.Todo, int)>);
}
